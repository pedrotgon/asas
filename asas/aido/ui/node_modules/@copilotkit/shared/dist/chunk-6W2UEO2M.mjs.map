{"version":3,"sources":["../src/utils/console-styling.ts"],"sourcesContent":["/**\n * Console styling utilities for CopilotKit branded messages\n * Provides consistent, readable colors across light and dark console themes\n */\n\n/**\n * Color palette optimized for console readability\n */\nexport const ConsoleColors = {\n  /** Primary brand blue - for titles and links */\n  primary: \"#007acc\",\n  /** Success green - for positive messaging */\n  success: \"#22c55e\",\n  /** Purple - for feature highlights */\n  feature: \"#a855f7\",\n  /** Red - for calls-to-action */\n  cta: \"#ef4444\",\n  /** Cyan - for closing statements */\n  info: \"#06b6d4\",\n  /** Inherit console default - for body text */\n  inherit: \"inherit\",\n  /** Warning style */\n  warning: \"#f59e0b\",\n} as const;\n\n/**\n * Console style templates for common patterns\n */\nexport const ConsoleStyles = {\n  /** Large header style */\n  header: `color: ${ConsoleColors.warning}; font-weight: bold; font-size: 16px;`,\n  /** Section header style */\n  section: `color: ${ConsoleColors.success}; font-weight: bold;`,\n  /** Feature highlight style */\n  highlight: `color: ${ConsoleColors.feature}; font-weight: bold;`,\n  /** Call-to-action style */\n  cta: `color: ${ConsoleColors.success}; font-weight: bold;`,\n  /** Info style */\n  info: `color: ${ConsoleColors.info}; font-weight: bold;`,\n  /** Link style */\n  link: `color: ${ConsoleColors.primary}; text-decoration: underline;`,\n  /** Body text - inherits console theme */\n  body: `color: ${ConsoleColors.inherit};`,\n  /** Warning style */\n  warning: `color: ${ConsoleColors.cta}; font-weight: bold;`,\n} as const;\n\n/**\n * Styled console message for CopilotKit Platform promotion\n * Displays a beautiful, branded advertisement in the console\n */\nexport function logCopilotKitPlatformMessage() {\n  console.log(\n    `%cCopilotKit Warning%c\n\nuseCopilotChatHeadless_c provides full compatibility with CopilotKit's newly released Headless UI feature set. To enable this premium feature, add your public license key, available for free at:\n\n%chttps://cloud.copilotkit.ai%c\n\nAlternatively, useCopilotChat is available for basic programmatic control, and does not require an API key.\n\nTo learn more about premium features, read the documentation here:\n\n%chttps://docs.copilotkit.ai/premium%c`,\n    ConsoleStyles.header,\n    ConsoleStyles.body,\n    ConsoleStyles.cta,\n    ConsoleStyles.body,\n    ConsoleStyles.link,\n    ConsoleStyles.body,\n  );\n}\n\nexport function publicApiKeyRequired(feature: string) {\n  console.log(\n    `\n%cCopilotKit Warning%c \\n\nIn order to use ${feature}, you need to add your CopilotKit API key, available for free at https://cloud.copilotkit.ai.\n    `.trim(),\n    ConsoleStyles.header,\n    ConsoleStyles.body,\n  );\n}\n\n/**\n * Create a styled console message with custom content\n *\n * @param template - Template string with %c placeholders\n * @param styles - Array of style strings matching the %c placeholders\n *\n * @example\n * ```typescript\n * logStyled(\n *   '%cCopilotKit%c Welcome to the platform!',\n *   [ConsoleStyles.header, ConsoleStyles.body]\n * );\n * ```\n */\nexport function logStyled(template: string, styles: string[]) {\n  console.log(template, ...styles);\n}\n\n/**\n * Quick styled console methods for common use cases\n */\nexport const styledConsole = {\n  /** Log a success message */\n  success: (message: string) => logStyled(`%c✅ ${message}`, [ConsoleStyles.section]),\n\n  /** Log an info message */\n  info: (message: string) => logStyled(`%cℹ️ ${message}`, [ConsoleStyles.info]),\n\n  /** Log a feature highlight */\n  feature: (message: string) => logStyled(`%c✨ ${message}`, [ConsoleStyles.highlight]),\n\n  /** Log a call-to-action */\n  cta: (message: string) => logStyled(`%c🚀 ${message}`, [ConsoleStyles.cta]),\n\n  /** Log the CopilotKit platform promotion */\n  logCopilotKitPlatformMessage: logCopilotKitPlatformMessage,\n\n  /** Log a `publicApiKeyRequired` warning */\n  publicApiKeyRequired: publicApiKeyRequired,\n} as const;\n"],"mappings":";AAQO,IAAM,gBAAgB;AAAA;AAAA,EAE3B,SAAS;AAAA;AAAA,EAET,SAAS;AAAA;AAAA,EAET,SAAS;AAAA;AAAA,EAET,KAAK;AAAA;AAAA,EAEL,MAAM;AAAA;AAAA,EAEN,SAAS;AAAA;AAAA,EAET,SAAS;AACX;AAKO,IAAM,gBAAgB;AAAA;AAAA,EAE3B,QAAQ,UAAU,cAAc;AAAA;AAAA,EAEhC,SAAS,UAAU,cAAc;AAAA;AAAA,EAEjC,WAAW,UAAU,cAAc;AAAA;AAAA,EAEnC,KAAK,UAAU,cAAc;AAAA;AAAA,EAE7B,MAAM,UAAU,cAAc;AAAA;AAAA,EAE9B,MAAM,UAAU,cAAc;AAAA;AAAA,EAE9B,MAAM,UAAU,cAAc;AAAA;AAAA,EAE9B,SAAS,UAAU,cAAc;AACnC;AAMO,SAAS,+BAA+B;AAC7C,UAAQ;AAAA,IACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,cAAc;AAAA,IACd,cAAc;AAAA,IACd,cAAc;AAAA,IACd,cAAc;AAAA,IACd,cAAc;AAAA,IACd,cAAc;AAAA,EAChB;AACF;AAEO,SAAS,qBAAqB,SAAiB;AACpD,UAAQ;AAAA,IACN;AAAA;AAAA;AAAA,kBAEc;AAAA,MACZ,KAAK;AAAA,IACP,cAAc;AAAA,IACd,cAAc;AAAA,EAChB;AACF;AAgBO,SAAS,UAAU,UAAkB,QAAkB;AAC5D,UAAQ,IAAI,UAAU,GAAG,MAAM;AACjC;AAKO,IAAM,gBAAgB;AAAA;AAAA,EAE3B,SAAS,CAAC,YAAoB,UAAU,YAAO,WAAW,CAAC,cAAc,OAAO,CAAC;AAAA;AAAA,EAGjF,MAAM,CAAC,YAAoB,UAAU,kBAAQ,WAAW,CAAC,cAAc,IAAI,CAAC;AAAA;AAAA,EAG5E,SAAS,CAAC,YAAoB,UAAU,YAAO,WAAW,CAAC,cAAc,SAAS,CAAC;AAAA;AAAA,EAGnF,KAAK,CAAC,YAAoB,UAAU,eAAQ,WAAW,CAAC,cAAc,GAAG,CAAC;AAAA;AAAA,EAG1E;AAAA;AAAA,EAGA;AACF;","names":[]}