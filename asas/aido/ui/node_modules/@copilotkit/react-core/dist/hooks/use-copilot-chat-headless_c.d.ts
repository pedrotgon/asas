import { UseCopilotChatOptions, UseCopilotChatReturn } from './use-copilot-chat_internal.js';
export { MCPServerConfig, defaultSystemMessage } from './use-copilot-chat_internal.js';
import '../types/system-message.js';
import '@copilotkit/runtime-client-gql';
import '@copilotkit/shared';
import './use-chat.js';
import 'react';
import '../copilot-context-cf9de848.js';
import '../types/frontend-action.js';
import './use-tree.js';
import '../types/document-pointer.js';
import '../types/chat-suggestion-configuration.js';
import '../types/coagent-action.js';
import '../types/coagent-state.js';
import '../index-1f5b66ac.js';

/**
 * Enterprise React hook that provides complete chat functionality for fully custom UI implementations.
 * Includes all advanced features like direct message access, suggestions array, interrupt handling, and MCP support.
 *
 * **Requires a publicApiKey** - Sign up for free at https://cloud.copilotkit.ai/
 *
 * @param options - Configuration options for the chat
 * @returns Complete chat interface with all enterprise features
 *
 * @example
 * ```tsx
 * const { messages, sendMessage, suggestions, interrupt } = useCopilotChatHeadless_c();
 * ```
 */
declare function useCopilotChatHeadless_c(options?: UseCopilotChatOptions): UseCopilotChatReturn;

export { UseCopilotChatOptions as UseCopilotChatOptions_c, UseCopilotChatReturn as UseCopilotChatReturn_c, useCopilotChatHeadless_c };
