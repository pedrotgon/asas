{"version":3,"sources":["../src/components/chat/messages/LegacyRenderMessage.tsx"],"sourcesContent":["import React from \"react\";\nimport { RenderMessageProps } from \"../props\";\nimport { RenderMessage as DefaultRenderMessage } from \"./RenderMessage\";\nimport { aguiToGQL } from \"@copilotkit/runtime-client-gql\";\n\n/**\n * Legacy message render props interface for backwards compatibility\n */\nexport interface LegacyRenderProps {\n  RenderTextMessage?: React.ComponentType<RenderMessageProps>;\n  RenderActionExecutionMessage?: React.ComponentType<RenderMessageProps>;\n  RenderAgentStateMessage?: React.ComponentType<RenderMessageProps>;\n  RenderResultMessage?: React.ComponentType<RenderMessageProps>;\n  RenderImageMessage?: React.ComponentType<RenderMessageProps>;\n}\n\n/**\n * Props for the LegacyRenderMessage component\n */\nexport interface LegacyRenderMessageProps extends RenderMessageProps {\n  legacyProps: LegacyRenderProps;\n}\n\n/**\n * Legacy message adapter component that maps old render props to new message types.\n * This component provides backwards compatibility for the deprecated render props.\n */\nexport const LegacyRenderMessage: React.FC<LegacyRenderMessageProps> = ({\n  message,\n  inProgress,\n  index,\n  isCurrentMessage,\n  actionResult,\n  AssistantMessage,\n  UserMessage,\n  ImageRenderer,\n  onRegenerate,\n  onCopy,\n  onThumbsUp,\n  onThumbsDown,\n  markdownTagRenderers,\n  legacyProps,\n}) => {\n  const {\n    RenderTextMessage,\n    RenderActionExecutionMessage,\n    RenderAgentStateMessage,\n    RenderResultMessage,\n    RenderImageMessage,\n  } = legacyProps;\n\n  const deprecatedMessage = aguiToGQL(message)[0] ?? undefined;\n\n  // Route to appropriate legacy renderer based on message type\n  if (deprecatedMessage.isTextMessage() && RenderTextMessage) {\n    return (\n      <RenderTextMessage\n        message={message}\n        inProgress={inProgress}\n        index={index}\n        isCurrentMessage={isCurrentMessage}\n        AssistantMessage={AssistantMessage}\n        UserMessage={UserMessage}\n        onRegenerate={onRegenerate}\n        onCopy={onCopy}\n        onThumbsUp={onThumbsUp}\n        onThumbsDown={onThumbsDown}\n        markdownTagRenderers={markdownTagRenderers}\n      />\n    );\n  }\n\n  if (deprecatedMessage.isActionExecutionMessage() && RenderActionExecutionMessage) {\n    return (\n      <RenderActionExecutionMessage\n        message={message}\n        inProgress={inProgress}\n        index={index}\n        isCurrentMessage={isCurrentMessage}\n        actionResult={actionResult}\n        AssistantMessage={AssistantMessage}\n        UserMessage={UserMessage}\n      />\n    );\n  }\n\n  if (deprecatedMessage.isAgentStateMessage() && RenderAgentStateMessage) {\n    return (\n      <RenderAgentStateMessage\n        message={message}\n        inProgress={inProgress}\n        index={index}\n        isCurrentMessage={isCurrentMessage}\n        AssistantMessage={AssistantMessage}\n        UserMessage={UserMessage}\n      />\n    );\n  }\n\n  if (deprecatedMessage.isResultMessage() && RenderResultMessage) {\n    return (\n      <RenderResultMessage\n        message={message}\n        inProgress={inProgress}\n        index={index}\n        isCurrentMessage={isCurrentMessage}\n        AssistantMessage={AssistantMessage}\n        UserMessage={UserMessage}\n      />\n    );\n  }\n\n  if (deprecatedMessage.isImageMessage() && RenderImageMessage) {\n    return (\n      <RenderImageMessage\n        message={message}\n        inProgress={inProgress}\n        index={index}\n        isCurrentMessage={isCurrentMessage}\n        AssistantMessage={AssistantMessage}\n        UserMessage={UserMessage}\n      />\n    );\n  }\n\n  // Fallback to default RenderMessage for any unhandled cases\n  return (\n    <DefaultRenderMessage\n      message={message}\n      inProgress={inProgress}\n      index={index}\n      isCurrentMessage={isCurrentMessage}\n      AssistantMessage={AssistantMessage}\n      UserMessage={UserMessage}\n      ImageRenderer={ImageRenderer}\n      onRegenerate={onRegenerate}\n      onCopy={onCopy}\n      onThumbsUp={onThumbsUp}\n      onThumbsDown={onThumbsDown}\n      markdownTagRenderers={markdownTagRenderers}\n    />\n  );\n};\n"],"mappings":";;;;;AAGA,SAAS,iBAAiB;AAqDpB;AA7BC,IAAM,sBAA0D,CAAC;AAAA,EACtE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AA1CN;AA2CE,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AAEJ,QAAM,qBAAoB,eAAU,OAAO,EAAE,CAAC,MAApB,YAAyB;AAGnD,MAAI,kBAAkB,cAAc,KAAK,mBAAmB;AAC1D,WACE;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,IACF;AAAA,EAEJ;AAEA,MAAI,kBAAkB,yBAAyB,KAAK,8BAA8B;AAChF,WACE;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,IACF;AAAA,EAEJ;AAEA,MAAI,kBAAkB,oBAAoB,KAAK,yBAAyB;AACtE,WACE;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,IACF;AAAA,EAEJ;AAEA,MAAI,kBAAkB,gBAAgB,KAAK,qBAAqB;AAC9D,WACE;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,IACF;AAAA,EAEJ;AAEA,MAAI,kBAAkB,eAAe,KAAK,oBAAoB;AAC5D,WACE;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,IACF;AAAA,EAEJ;AAGA,SACE;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,EACF;AAEJ;","names":[]}